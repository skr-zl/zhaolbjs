{"ast":null,"code":"var _jsxFileName = \"/Users/zhaoliang923/Desktop/\\u524D\\u7AEF\\u5C0F\\u7EC4/react18-demo/src/App.jsx\";\nimport React, { Component } from 'react';\nimport Header from './components/Head';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport './App.css';\nimport { useTransition } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    //状态在哪里，操作状态的方法就在哪里\n    //初始化状态\n    this.state = {\n      todos: [{\n        id: '001',\n        name: '理财通用组件梳理',\n        done: true\n      }, {\n        id: '002',\n        name: '前端开发IDE以及插件调研',\n        done: true\n      }, {\n        id: '003',\n        name: 'React17,18版本比较',\n        done: false\n      }, {\n        id: '004',\n        name: 'wasm加密调研',\n        done: false\n      }]\n    };\n    //addTodo用于添加一个todo，接收的参数是todo对象\n    this.addTodo = todoObj => {\n      //获取原todos\n      const {\n        todos\n      } = this.state;\n      //追加一个todo\n      const newTodos = [todoObj, ...todos];\n      //更新状态\n      startTransition(() => {\n        this.setState({\n          todos: newTodos\n        });\n      });\n    };\n    //updateTodo用于更新一个todo对象\n    this.updateTodo = (id, done) => {\n      //获取状态中的todos\n      const {\n        todos\n      } = this.state;\n      //匹配处理数据\n      const newTodos = todos.map(todoObj => {\n        if (todoObj.id === id) return {\n          ...todoObj,\n          done\n        };else return todoObj;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n    //deleteTodo用于删除一个todo对象\n    this.deleteTodo = id => {\n      //获取原来的todos\n      const {\n        todos\n      } = this.state;\n      //删除指定id的todo对象\n      const newTodos = todos.filter(todoObj => {\n        return todoObj.id !== id;\n      });\n      //更新状态\n      this.setState({\n        todos: newTodos\n      });\n    };\n    //checkAllTodo用于全选\n    this.checkAllTodo = done => {\n      //获取原来的todos\n      const {\n        todos\n      } = this.state;\n      //加工数据\n      const newTodos = todos.map(todoObj => {\n        return {\n          ...todoObj,\n          done\n        };\n      });\n      //更新状态\n      startTransition(() => {\n        this.setState({\n          todos: newTodos\n        });\n      });\n    };\n    //clearAllDone用于清除所有已完成的\n    this.clearAllDone = () => {\n      //获取原来的todos\n      const {\n        todos\n      } = this.state;\n      //过滤数据\n      const newTodos = todos.filter(todoObj => {\n        return !todoObj.done;\n      });\n      //更新状态\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos,\n          updateTodo: this.updateTodo,\n          deleteTodo: this.deleteTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          todos: todos,\n          checkAllTodo: this.checkAllTodo,\n          clearAllDone: this.clearAllDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Header","List","Footer","useTransition","jsxDEV","_jsxDEV","App","constructor","args","state","todos","id","name","done","addTodo","todoObj","newTodos","startTransition","setState","updateTodo","map","deleteTodo","filter","checkAllTodo","clearAllDone","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/zhaoliang923/Desktop/前端小组/react18-demo/src/App.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport Header from './components/Head'\nimport List from './components/List'\nimport Footer from './components/Footer'\nimport './App.css'\nimport { useTransition } from 'react';\n \nexport default class App extends Component {\n\t//状态在哪里，操作状态的方法就在哪里\n \n\t//初始化状态\n\tstate = {todos:[\n\t\t{id:'001',name:'理财通用组件梳理',done:true},\n\t\t{id:'002',name:'前端开发IDE以及插件调研',done:true},\n\t\t{id:'003',name:'React17,18版本比较',done:false},\n\t\t{id:'004',name:'wasm加密调研',done:false}\n\t]}\n \n\t//addTodo用于添加一个todo，接收的参数是todo对象\n\taddTodo = (todoObj)=>{\n\t\t//获取原todos\n\t\tconst {todos} = this.state\n\t\t//追加一个todo\n\t\tconst newTodos = [todoObj,...todos]\n\t\t//更新状态\n\t\tstartTransition(()=>{\n\t\t\tthis.setState({todos:newTodos})\n\t\t})\n\t}\n \n\t//updateTodo用于更新一个todo对象\n\tupdateTodo = (id,done)=>{\n\t\t//获取状态中的todos\n\t\tconst {todos} = this.state\n\t\t//匹配处理数据\n\t\tconst newTodos = todos.map((todoObj)=>{\n\t\t\tif(todoObj.id === id) return {...todoObj,done}\n\t\t\telse return todoObj\n\t\t})\n\t\tthis.setState({todos:newTodos})\n\t}\n \n\t//deleteTodo用于删除一个todo对象\n\tdeleteTodo = (id)=>{\n\t\t//获取原来的todos\n\t\tconst {todos} = this.state\n\t\t//删除指定id的todo对象\n\t\tconst newTodos = todos.filter((todoObj)=>{\n\t\t\treturn todoObj.id !== id\n\t\t})\n\t\t//更新状态\n\t\tthis.setState({todos:newTodos})\n\t}\n \n\t//checkAllTodo用于全选\n\tcheckAllTodo = (done)=>{\n\t\t//获取原来的todos\n\t\tconst {todos} = this.state\n\t\t//加工数据\n\t\tconst newTodos = todos.map((todoObj)=>{\n\t\t\treturn {...todoObj,done}\n\t\t})\n\t\t//更新状态\n\t\tstartTransition(()=>{\n\t\t\tthis.setState({todos:newTodos})\n\t\t})\n\t}\n \n\t//clearAllDone用于清除所有已完成的\n\tclearAllDone = ()=>{\n\t\t//获取原来的todos\n\t\tconst {todos} = this.state\n\t\t//过滤数据\n\t\tconst newTodos = todos.filter((todoObj)=>{\n\t\t\treturn !todoObj.done\n\t\t})\n\t\t//更新状态\n\t\tthis.setState({todos:newTodos})\n\t}\n \n\trender() {\n\t\tconst {todos} = this.state\n\t\treturn (\n\t\t\t<div className=\"todo-container\">\n\t\t\t\t<div className=\"todo-wrap\">\n\t\t\t\t\t<Header addTodo={this.addTodo}/>\n\t\t\t\t\t<List todos={todos} updateTodo={this.updateTodo} deleteTodo={this.deleteTodo}/>\n\t\t\t\t\t<Footer todos={todos} checkAllTodo={this.checkAllTodo} clearAllDone={this.clearAllDone}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}