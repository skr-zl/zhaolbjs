{"ast":null,"code":"var _jsxFileName = \"/Users/zhaoliang923/Desktop/\\u524D\\u7AEF\\u5C0F\\u7EC4/react18-demo/src/components/Head/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState, useDeferredValue } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header(props) {\n  _s();\n  const [text, setText] = useState('');\n  const deferText = useDeferredValue(text);\n\n  //监听打印\n  // useEffect(() => {\n  // \tconsole.log(\"deferText\"+ deferText)\n  // \tvar r=0\n  // \tfor (let index = 0; index < 10000; index++){\n  // \t\tr=r+1\n  // \t\tconsole.log(r)\n  // \t}\n  // },[deferText])\n\n  //键盘事件的回调\n  const handleKeyUp = event => {\n    //解构赋值获取keyCode,target\n    const {\n      keyCode,\n      target\n    } = event;\n    // //判断是否是回车按键\n    // if(keyCode !== 13) return\n    // //添加的todo名字不能为空\n    if (target.value.trim() === '') {\n      // alert('输入不能为空')\n      return;\n    }\n    //准备好一个todo对象\n    const todoObj = {\n      id: nanoid(),\n      name: target.value,\n      done: false\n    };\n    //将todoObj传递给App\n    props.addTodo(todoObj);\n    //清空输入\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onKeyUp: handleKeyUp,\n      onChange: e => setText(e.target.value),\n      type: \"text\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u4EFB\\u52A1\\u540D\\u79F0\\uFF0C\\u6309\\u56DE\\u8F66\\u952E\\u786E\\u8BA4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: deferText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n_s(Header, \"0M0teIq79CKI7pWnQrpfBSQ0N7E=\", false, function () {\n  return [useDeferredValue];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Component","useEffect","useState","useDeferredValue","PropTypes","nanoid","jsxDEV","_jsxDEV","Header","props","_s","text","setText","deferText","handleKeyUp","event","keyCode","target","value","trim","todoObj","id","name","done","addTodo","className","children","onKeyUp","onChange","e","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zhaoliang923/Desktop/前端小组/react18-demo/src/components/Head/index.jsx"],"sourcesContent":["import React, { Component, useEffect, useState, useDeferredValue } from 'react'\nimport PropTypes from 'prop-types'\nimport {nanoid} from 'nanoid'\nimport './index.css'\n \nfunction Header(props){\n\tconst [text, setText] = useState('')\n\tconst deferText = useDeferredValue(text)\n\n\t//监听打印\n\t// useEffect(() => {\n\t// \tconsole.log(\"deferText\"+ deferText)\n\t// \tvar r=0\n\t// \tfor (let index = 0; index < 10000; index++){\n\t// \t\tr=r+1\n\t// \t\tconsole.log(r)\n\t// \t}\n\t// },[deferText])\n\t\n\t//键盘事件的回调\n\tconst handleKeyUp = (event)=>{\n\t\t//解构赋值获取keyCode,target\n\t\tconst {keyCode,target} = event\n\t\t// //判断是否是回车按键\n\t\t// if(keyCode !== 13) return\n\t\t// //添加的todo名字不能为空\n\t\tif(target.value.trim() === ''){\n\t\t\t// alert('输入不能为空')\n\t\t\treturn\n\t\t}\n\t\t//准备好一个todo对象\n\t\tconst todoObj = {id:nanoid(),name:target.value,done:false}\n\t\t//将todoObj传递给App\n\t\tprops.addTodo(todoObj)\n\t\t//清空输入\n\t}\n \n\treturn (\n\t\t<div className=\"todo-header\">\n\t\t\t<input value={text} onKeyUp={handleKeyUp}  onChange={e => setText(e.target.value)}  type=\"text\" placeholder=\"请输入你的任务名称，按回车键确认\"/>\n\t\t\t<div>\n\t\t\t\t<p>{deferText}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default Header;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,gBAAgB,QAAQ,OAAO;AAC/E,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,MAAMA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMW,SAAS,GAAGV,gBAAgB,CAACQ,IAAI,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMG,WAAW,GAAIC,KAAK,IAAG;IAC5B;IACA,MAAM;MAACC,OAAO;MAACC;IAAM,CAAC,GAAGF,KAAK;IAC9B;IACA;IACA;IACA,IAAGE,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAC;MAC7B;MACA;IACD;IACA;IACA,MAAMC,OAAO,GAAG;MAACC,EAAE,EAAChB,MAAM,CAAC,CAAC;MAACiB,IAAI,EAACL,MAAM,CAACC,KAAK;MAACK,IAAI,EAAC;IAAK,CAAC;IAC1D;IACAd,KAAK,CAACe,OAAO,CAACJ,OAAO,CAAC;IACtB;EACD,CAAC;EAED,oBACCb,OAAA;IAAKkB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC3BnB,OAAA;MAAOW,KAAK,EAAEP,IAAK;MAACgB,OAAO,EAAEb,WAAY;MAAEc,QAAQ,EAAEC,CAAC,IAAIjB,OAAO,CAACiB,CAAC,CAACZ,MAAM,CAACC,KAAK,CAAE;MAAEY,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChI5B,OAAA;MAAAmB,QAAA,eACCnB,OAAA;QAAAmB,QAAA,EAAIb;MAAS;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER;AAACzB,EAAA,CAxCQF,MAAM;EAAA,QAEIL,gBAAgB;AAAA;AAAAiC,EAAA,GAF1B5B,MAAM;AAyCf,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}