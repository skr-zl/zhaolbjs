{"ast":null,"code":"var _jsxFileName = \"/Users/zhaoliang923/Desktop/\\u524D\\u7AEF\\u5C0F\\u7EC4/react18-demo/src/components/List/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Item from '../Item';\nimport './index.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class List extends Component {\n  componentDidMount() {\n    // 这里执行一个无意义的循环，但请注意这会阻塞UI线程\n    let k = 0;\n    for (let i = 0; i <= 200000000; i += 1) {\n      k = i;\n    }\n    // 实际上，这个循环结束后k的值将被丢弃，因为它没有被使用\n    console.log('无意义的循环已完成');\n  }\n  render() {\n    const {\n      todos,\n      updateTodo,\n      deleteTodo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-main\",\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(Item, {\n          ...todo,\n          updateTodo: updateTodo,\n          deleteTodo: deleteTodo\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this);\n  }\n}\n//对接收的props进行：类型、必要性的限制\nList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","Item","useState","jsxDEV","_jsxDEV","List","componentDidMount","k","i","console","log","render","todos","updateTodo","deleteTodo","props","className","children","map","todo","id","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","array","isRequired","func"],"sources":["/Users/zhaoliang923/Desktop/前端小组/react18-demo/src/components/List/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Item from '../Item'\nimport './index.css'\nimport { useState } from 'react'\n \nexport default class List extends Component {\n \n\t//对接收的props进行：类型、必要性的限制\n\tstatic propTypes = {\n\t\ttodos:PropTypes.array.isRequired,\n\t\tupdateTodo:PropTypes.func.isRequired,\n\t\tdeleteTodo:PropTypes.func.isRequired,\n\t}\n\tcomponentDidMount() {\n\t\t// 这里执行一个无意义的循环，但请注意这会阻塞UI线程\n\t\tlet k = 0;\n\t\tfor (let i = 0; i <= 200000000; i += 1) {\n\t\t  k = i;\n\t\t}\n\t\t// 实际上，这个循环结束后k的值将被丢弃，因为它没有被使用\n\t\tconsole.log('无意义的循环已完成');\n\t  }\n\trender() {\n\t\tconst {todos,updateTodo,deleteTodo} = this.props\n\t\treturn (\n\t\t\t<ul className=\"todo-main\">\n\t\t\t\t{\n\t\t\t\t\ttodos.map( todo =>{\n\t\t\t\t\t\treturn <Item key={todo.id} {...todo} updateTodo={updateTodo} deleteTodo={deleteTodo}/>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t)\n\t}\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,MAAMC,IAAI,SAASN,SAAS,CAAC;EAQ3CO,iBAAiBA,CAAA,EAAG;IACnB;IACA,IAAIC,CAAC,GAAG,CAAC;IACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,SAAS,EAAEA,CAAC,IAAI,CAAC,EAAE;MACtCD,CAAC,GAAGC,CAAC;IACP;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACvB;EACFC,MAAMA,CAAA,EAAG;IACR,MAAM;MAACC,KAAK;MAACC,UAAU;MAACC;IAAU,CAAC,GAAG,IAAI,CAACC,KAAK;IAChD,oBACCX,OAAA;MAAIY,SAAS,EAAC,WAAW;MAAAC,QAAA,EAEvBL,KAAK,CAACM,GAAG,CAAEC,IAAI,IAAG;QACjB,oBAAOf,OAAA,CAACH,IAAI;UAAA,GAAmBkB,IAAI;UAAEN,UAAU,EAAEA,UAAW;UAACC,UAAU,EAAEA;QAAW,GAAlEK,IAAI,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA4D,CAAC;MACvF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC;EAEP;AACD;AA3BC;AAFoBnB,IAAI,CAGjBoB,SAAS,GAAG;EAClBb,KAAK,EAACZ,SAAS,CAAC0B,KAAK,CAACC,UAAU;EAChCd,UAAU,EAACb,SAAS,CAAC4B,IAAI,CAACD,UAAU;EACpCb,UAAU,EAACd,SAAS,CAAC4B,IAAI,CAACD;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}