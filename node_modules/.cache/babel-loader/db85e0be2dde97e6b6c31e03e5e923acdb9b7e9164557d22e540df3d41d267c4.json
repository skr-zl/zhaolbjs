{"ast":null,"code":"var _jsxFileName = \"/Users/zhaoliang923/Desktop/\\u524D\\u7AEF\\u5C0F\\u7EC4/react18-demo/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useTransition } from 'react';\nimport Header from 'components/Head/Header'; // 假设Header是一个函数组件或类组件\nimport List from './List'; // 假设List是一个函数组件或类组件\nimport Footer from './Footer'; // 假设Footer是一个函数组件或类组件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 初始化状态\n  const [todos, setTodos] = useState([{\n    id: '001',\n    name: '理财通用组件梳理',\n    done: true\n  }, {\n    id: '002',\n    name: '前端开发IDE以及插件调研',\n    done: true\n  }, {\n    id: '003',\n    name: 'React17,18版本比较',\n    done: false\n  }, {\n    id: '004',\n    name: 'wasm加密调研',\n    done: false\n  }]);\n\n  // 使用useTransition\n  const [startTransition, isPending] = useTransition();\n\n  // addTodo用于添加一个todo\n  const addTodo = todoObj => {\n    const newTodos = [todoObj, ...todos];\n    startTransition(() => {\n      setTodos(newTodos);\n    });\n  };\n\n  // updateTodo用于更新一个todo对象\n  const updateTodo = (id, done) => {\n    const newTodos = todos.map(todoObj => {\n      if (todoObj.id === id) return {\n        ...todoObj,\n        done\n      };\n      return todoObj;\n    });\n    setTodos(newTodos);\n  };\n\n  // deleteTodo用于删除一个todo对象\n  const deleteTodo = id => {\n    const newTodos = todos.filter(todoObj => todoObj.id !== id);\n    setTodos(newTodos);\n  };\n\n  // checkAllTodo用于全选\n  const checkAllTodo = done => {\n    const newTodos = todos.map(todoObj => ({\n      ...todoObj,\n      done\n    }));\n    startTransition(() => {\n      setTodos(newTodos);\n    });\n  };\n\n  // clearAllDone用于清除所有已完成的\n  const clearAllDone = () => {\n    const newTodos = todos.filter(todoObj => !todoObj.done);\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        todos: todos,\n        updateTodo: updateTodo,\n        deleteTodo: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        todos: todos,\n        checkAllTodo: checkAllTodo,\n        clearAllDone: clearAllDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ATq/vPWokzvYF5GNqcEQol+LwrA=\", false, function () {\n  return [useTransition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useTransition","Header","List","Footer","jsxDEV","_jsxDEV","App","_s","todos","setTodos","id","name","done","startTransition","isPending","addTodo","todoObj","newTodos","updateTodo","map","deleteTodo","filter","checkAllTodo","clearAllDone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zhaoliang923/Desktop/前端小组/react18-demo/src/App.jsx"],"sourcesContent":["import React, { useState, useTransition } from 'react';\nimport Header from 'components/Head/Header'; // 假设Header是一个函数组件或类组件\nimport List from './List'; // 假设List是一个函数组件或类组件\nimport Footer from './Footer'; // 假设Footer是一个函数组件或类组件\n\nfunction App() {\n    // 初始化状态\n    const [todos, setTodos] = useState([\n        { id: '001', name: '理财通用组件梳理', done: true },\n        { id: '002', name: '前端开发IDE以及插件调研', done: true },\n        { id: '003', name: 'React17,18版本比较', done: false },\n        { id: '004', name: 'wasm加密调研', done: false }\n    ]);\n\n    // 使用useTransition\n    const [startTransition, isPending] = useTransition();\n\n    // addTodo用于添加一个todo\n    const addTodo = (todoObj) => {\n        const newTodos = [todoObj, ...todos];\n        startTransition(() => {\n            setTodos(newTodos);\n        });\n    };\n\n    // updateTodo用于更新一个todo对象\n    const updateTodo = (id, done) => {\n        const newTodos = todos.map(todoObj => {\n            if (todoObj.id === id) return { ...todoObj, done };\n            return todoObj;\n        });\n        setTodos(newTodos);\n    };\n\n    // deleteTodo用于删除一个todo对象\n    const deleteTodo = (id) => {\n        const newTodos = todos.filter(todoObj => todoObj.id !== id);\n        setTodos(newTodos);\n    };\n\n    // checkAllTodo用于全选\n    const checkAllTodo = (done) => {\n        const newTodos = todos.map(todoObj => ({ ...todoObj, done }));\n        startTransition(() => {\n            setTodos(newTodos);\n        });\n    };\n\n    // clearAllDone用于清除所有已完成的\n    const clearAllDone = () => {\n        const newTodos = todos.filter(todoObj => !todoObj.done);\n        setTodos(newTodos);\n    };\n\n    return (\n        <div className=\"todo-container\">\n            <div className=\"todo-wrap\">\n                <Header addTodo={addTodo} />\n                <List todos={todos} updateTodo={updateTodo} deleteTodo={deleteTodo} />\n                <Footer todos={todos} checkAllTodo={checkAllTodo} clearAllDone={clearAllDone} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}