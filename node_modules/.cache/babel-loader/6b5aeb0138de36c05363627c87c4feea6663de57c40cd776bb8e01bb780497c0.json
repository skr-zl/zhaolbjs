{"ast":null,"code":"var _jsxFileName = \"/Users/zhaoliang923/Desktop/\\u524D\\u7AEF\\u5C0F\\u7EC4/react18-demo/src/components/Head/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor(...args) {\n    super(...args);\n    //键盘事件的回调\n    this.handleKeyUp = event => {\n      //解构赋值获取keyCode,target\n      const {\n        keyCode,\n        target\n      } = event;\n      //判断是否是回车按键\n      if (keyCode !== 13) return;\n      //添加的todo名字不能为空\n      if (target.value.trim() === '') {\n        alert('输入不能为空');\n        return;\n      }\n      //准备好一个todo对象\n      const todoObj = {\n        id: nanoid(),\n        name: target.value,\n        done: false\n      };\n      //将todoObj传递给App\n      this.props.addTodo(todoObj);\n      //清空输入\n      target.value = '';\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: this.handleKeyUp,\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u4EFB\\u52A1\\u540D\\u79F0\\uFF0C\\u6309\\u56DE\\u8F66\\u952E\\u786E\\u8BA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this);\n  }\n}\n//对接收的props进行：类型、必要性的限制\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","nanoid","jsxDEV","_jsxDEV","Header","constructor","args","handleKeyUp","event","keyCode","target","value","trim","alert","todoObj","id","name","done","props","addTodo","render","className","children","onKeyUp","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","func","isRequired"],"sources":["/Users/zhaoliang923/Desktop/前端小组/react18-demo/src/components/Head/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {nanoid} from 'nanoid'\nimport './index.css'\n \nexport default class Header extends Component {\n \n\t//对接收的props进行：类型、必要性的限制\n\tstatic propTypes = {\n\t\taddTodo:PropTypes.func.isRequired\n\t}\n \n\t//键盘事件的回调\n\thandleKeyUp = (event)=>{\n\t\t//解构赋值获取keyCode,target\n\t\tconst {keyCode,target} = event\n\t\t//判断是否是回车按键\n\t\tif(keyCode !== 13) return\n\t\t//添加的todo名字不能为空\n\t\tif(target.value.trim() === ''){\n\t\t\talert('输入不能为空')\n\t\t\treturn\n\t\t}\n\t\t//准备好一个todo对象\n\t\tconst todoObj = {id:nanoid(),name:target.value,done:false}\n\t\t//将todoObj传递给App\n\t\tthis.props.addTodo(todoObj)\n\t\t//清空输入\n\t\ttarget.value = ''\n\t}\n \n\trender() {\n\t\treturn (\n\t\t\t<div className=\"todo-header\">\n\t\t\t\t<input onKeyUp={this.handleKeyUp} type=\"text\" placeholder=\"请输入你的任务名称，按回车键确认\"/>\n\t\t\t</div>\n\t\t)\n\t}\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,MAAMC,MAAM,SAASL,SAAS,CAAC;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAO7C;IAAA,KACAC,WAAW,GAAIC,KAAK,IAAG;MACtB;MACA,MAAM;QAACC,OAAO;QAACC;MAAM,CAAC,GAAGF,KAAK;MAC9B;MACA,IAAGC,OAAO,KAAK,EAAE,EAAE;MACnB;MACA,IAAGC,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAC;QAC7BC,KAAK,CAAC,QAAQ,CAAC;QACf;MACD;MACA;MACA,MAAMC,OAAO,GAAG;QAACC,EAAE,EAACd,MAAM,CAAC,CAAC;QAACe,IAAI,EAACN,MAAM,CAACC,KAAK;QAACM,IAAI,EAAC;MAAK,CAAC;MAC1D;MACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC;MAC3B;MACAJ,MAAM,CAACC,KAAK,GAAG,EAAE;IAClB,CAAC;EAAA;EAEDS,MAAMA,CAAA,EAAG;IACR,oBACCjB,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC3BnB,OAAA;QAAOoB,OAAO,EAAE,IAAI,CAAChB,WAAY;QAACiB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC;EAER;AACD;AA/BC;AAFoBzB,MAAM,CAGnB0B,SAAS,GAAG;EAClBX,OAAO,EAACnB,SAAS,CAAC+B,IAAI,CAACC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}